name: .NET

trigger:
  branches:
    include: [master]

pool:
  vmImage: ubuntu-latest

stages:
#Linting
  - stage: Lint
    jobs:
        - job: Lint
          steps:
          - task: SonarCloudPrepare@1
            displayName: SonarCloudPrepare
            inputs:
              SonarCloud: 'SonarCloud'
              organization: 'xgepic'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'DemoWeatherAPI'
              cliProjectName: 'WeatherAPI'
              cliSources: '.'
          - task: DotNetCoreCLI@2
            displayName: build
            inputs:
              command: 'build' 
          - task: SonarCloudAnalyze@1
            displayName: SonarCloudAnalyze
          - task: SonarCloudPublish@1
            displayName: SonarCloudPublish
            inputs:
              pollingTimeoutSec: '300'
#Testing
  - stage: Test
    jobs:
      - job: Test
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: 'test'
#Building
  - stage: Build
    jobs: 
      - job: Restore
        steps:
          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: 'restore'
      - job: Build
        steps: 
          - task: DotNetCoreCLI@2
            displayName: build
            inputs:
              command: 'build' 
          - task: BuildQualityChecks@8
            displayName: Check build quality
            inputs:
              checkWarnings: true
              warningThreshold: '0'
#Deploying
  - stage: Deploy
    jobs:
      - job: Deploy
        steps:
        - task: Docker@2
          displayName: deploy
          inputs:
            containerRegistry: 'DockerHubConnection'
            repository: 'xgepic/weather-api'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
            tags: latest